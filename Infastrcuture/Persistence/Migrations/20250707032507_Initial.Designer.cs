// <auto-generated />
using System;
using LibraryManagementCleanArchitecture.Infastrucute.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementCleanArchitecture.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250707032507_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagementCleanArchitecture.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BookID");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BookId");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("LibraryManagementCleanArchitecture.Domain.Entities.Borrowings", b =>
                {
                    b.Property<Guid>("BorrowingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BorrowingId");

                    b.ToTable("Borrowings", (string)null);
                });

            modelBuilder.Entity("LibraryManagementCleanArchitecture.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberID");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MemberID");

                    b.ToTable("Members", (string)null);

                    b.HasDiscriminator<string>("MemberType").HasValue("Member");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LibraryManagementCleanArchitecture.Domain.Entities.LibraryMember", b =>
                {
                    b.HasBaseType("LibraryManagementCleanArchitecture.Domain.Entities.Member");

                    b.Property<int>("BooksBorrowed")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("LibraryMember");
                });

            modelBuilder.Entity("LibraryManagementCleanArchitecture.Domain.Entities.StaffMember", b =>
                {
                    b.HasBaseType("LibraryManagementCleanArchitecture.Domain.Entities.Member");

                    b.Property<string>("StaffType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasDiscriminator().HasValue("StaffMember");
                });
#pragma warning restore 612, 618
        }
    }
}
